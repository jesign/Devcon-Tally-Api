<?php
/**
 * Created by PhpStorm.
 * User: jesign
 * Date: 7/23/19
 * Time: 7:02 PM
 */

namespace Tests\Http;

use App\Criteria;
use App\Event;
use App\User;
use Laravel\Passport\Passport;
use Tests\TestCase;

class CriteriaTest extends TestCase
{
    protected $event;
    protected $eventUrlPrefix;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->event = factory(Event::class)->create();

        $this->eventUrlPrefix = 'api/events/' . $this->event->id;

        $user = create(User::class);

        Passport::actingAs($user);
    }

    public function testCriteriaIndex()
    {
        factory(Criteria::class, 5)->create([
            'event_id' => $this->event
        ]);

        $response = $this->json('GET',$this->eventUrlPrefix . '/criteria');
        $response->assertStatus(200);
    }

    public function testCriteriaCreate()
    {
        $data = [
            'name' => 'John Doe',
            'description' => 'lorem ipsum dolor sit amet',
            'max_points' => 10,
            'percentage' => 30
        ];

        $response = $this->json('POST',$this->eventUrlPrefix . '/criteria', $data);

        $response->assertStatus(200)->assertJson($data);
    }

    public function testCriteriaUpdate()
    {
        $criteria = factory(Criteria::class)->create();
        $data = [
            'id' => $criteria->id,
            'name' => 'Updated Name'
        ];

        $response = $this->json('POST',$this->eventUrlPrefix . '/criteria', $data);

        $response->assertStatus(200)->assertJson($data);
    }

    public function testCriteriaDelete() {
        $criteria = factory(Criteria::class)->create();

        $response = $this->json('POST',$this->eventUrlPrefix . '/criteria/' . $criteria->id . '/delete');

        $response->assertStatus(200)
            ->assertJson([
            'success' => true
        ]);
    }
}